module.exports = [
	"Напишите функцию `zip`, которая будет принимать на вход несколько объектов (любое количество), и возвращать единственный объект, содержащий все поля из всех объектов. Если одно и то же поле было в нескольких объектах, необходимо оставить значение, которое встретилось раньше",
	"Напишите функцию `euclid`, которая позволяет находить НОД натуральных чисел. Функция должна работать с любым количеством аргументов",
	"Напишите функцию `roman`, которая позволяет переводить римские числа в десятичные и обратно (в зависимости от того, что было в функцию передано)",
	"Напишите функцию `inverse`, которая меняет порядок элементов в массике на противоположный. Если в функцию вторым аргументом передаётся число &mdash; то переставляются все элементы массива кроме нескольких первых (количество зависит от числа). Если число отрицательное &mdash; то на месте остаются элементы в конце массива",
	"Напишите функцию `chess`, которая рисует ASCII-шахматрую доску размером N*N символов из звёздочек (в левом верхнем углу всегда стоит звёздочка)",
	"Напишите функцию `tree`, которая рисует ASCII-ёлочку высотой N символов из звёздочек",
	"Напишите функцию `plain`, которая будет принимать на вход массив массивов и создавать из них один общий массив. Массивы могут быть любой вложенности",
	"Напишите функцию `sort`, которая будет сортировать буквы в словах по алфавиту, а потом получившиеся слова в предложении &mdash; тоже. Первую букву каждого слова она сделает прописной, остальные &mdash; строчными",
	"Напишите функцию `anagram`, которая будет принимать на вход массив слов и группировать его на группы слов-анаграмм. Выводить только группы из двух и более слов. Слова в группах, как и сами группы, должны быть отсортированными",
	"Напишите функцию `letters`, которая будет удалять из строки символы, которые встречаются в ней больше одного раза. Если вторым аргументом передано true, то функция будет искать повторяющиеся символы в строках и удалять их, оставляя на месте только первую встречающуюся букву. Если вторым аргументом передано false, то функция будет оставлять только последнюю встречающуюся букву",
	"Напишите функцию `rle`, которая реализует RLE сжатие",
	"Напишите функцию `minmax`, которая находит минимальное и максимальное значения в строке. Возвращает массив, в котором первый элемент &mdash; это минимальное число в строке, второй элемент &mdash; максимальное",
	"Напишите функцию `get`, которая получает путь к вложенному свойству объекта и возвращает значение этого свойства (или undefined, если свойства не существует)",
	"Напишите функцию `set`, которая получает путь к вложенному свойству объекта и устанавливает значение в это свойство",
	"Напишите функцию `filter`, которая фильтрует html-код, оставляя только разрешённые html-теги",
	"Напишите функцию `format`, которая форматирует переданные целые числа в несколько колонок. Числа в получившейся таблице должны идти слева направо, сверху вниз",
	"Напишите функцию `plainify`, которая получает на вход обычный объект в вложенными свойствами, а возвращает plain-объект",
	"Напишите функцию `solve`, которая принимает на вход строку с математическим выражением, зависящим от переменной x и значение этой переменной, а возвращает вычисленное значение этого выражения. В выражении фигурируют операции сложения, вычитания, умножения. Используются только целые числа и скобки",
	"Напишите функцию `sorting`, которая принимает на вход массив plain-объектов и массив имён свойств, по которым необходимо отсортировать массив объектов, и реализует устойчивую сортировку этого массива в порядке возрастания (строки сортируются лексикографически, числа &mdash; в порядке возрастания)",
];
